
&НаКлиенте
Процедура Преобразовать(Команда)
	ПреобразоватьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПреобразоватьНаСервере()
	
	ОписаниеСлота = Новый Структура;
	ОписаниеСлота.Вставить("ВремяНачала", ВремяНачала);
	ОписаниеСлота.Вставить("ВремяОкончания", ВремяОкончания);
	ОписаниеСлота.Вставить("ДеньНачала", ДеньНачала);
	ОписаниеСлота.Вставить("ДеньОкончания", ДеньОкончания);
	НовыйОписаниеТаблицыКоординат 	= НовыйОписаниеТаблицыКоординат(ДискретностьШкалы);
	
	ОписаниеСлота.Вставить("ОписаниеКоодинат", НовыйОписаниеТаблицыКоординат);
	
		
	ТабличныйДокумент.Очистить();
	
	Макет = Документы.слм_ТелевизионнаяСетка.ПолучитьМакет("ШкалаСетки");
	
	НачалоШкалы = 0;
	КонецШкалы = 24;
	ЧасовВСутках = 24;
	
	Для каждого ДеньНедели Из Справочники.слм_ДниНедели.ПолучитьИменаПредопределенных() Цикл		
		ОбластьМакета = Макет.ПолучитьОбласть(ДеньНедели);
		ТабличныйДокумент.Присоединить(ОбластьМакета);		
	КонецЦикла;
	
	Если ДискретностьШкалы = Перечисления.слм_ДискретностьШкалы._60 Тогда
		
		
		НайденнаяСтрока = НовыйОписаниеКоординат().Найти(1, "Смещение");
		
		Для Счетчик = НачалоШкалы По Мин(НайденнаяСтрока.Смещение * ЧасовВСутках, НайденнаяСтрока.Смещение * КонецШкалы) Цикл
			
			ОбластьТаймСлота = Макет.ПолучитьОбласть("ТаймСлот");
			ОбластьТаймСлота.Параметры.ТаймСлот = Формат(Дата('19000101000000' + ((Счетчик * НайденнаяСтрока.Минуты * 60))),"ДФ=HH:мм");
			ТабличныйДокумент.Присоединить(ОбластьТаймСлота);		
			
		КонецЦикла;	
		
	ИначеЕсли ДискретностьШкалы = Перечисления.слм_ДискретностьШкалы._30 Тогда
		НайденнаяСтрока = НовыйОписаниеКоординат().Найти(2, "Смещение");
		
		Для Счетчик = НачалоШкалы * НайденнаяСтрока.Смещение По Мин(НайденнаяСтрока.Смещение * ЧасовВСутках, НайденнаяСтрока.Смещение * КонецШкалы) Цикл 
			
			ОбластьТаймСлота = Макет.ПолучитьОбласть("ТаймСлот");
			ОбластьТаймСлота.Параметры.ТаймСлот = Формат(Дата('19000101000000' + ((Счетчик * НайденнаяСтрока.Минуты * 60))),"ДФ=HH:мм");
			ТабличныйДокумент.Присоединить(ОбластьТаймСлота);
			
		КонецЦикла; 
		
		
	ИначеЕсли ДискретностьШкалы = Перечисления.слм_ДискретностьШкалы._15 Тогда 
		
		НайденнаяСтрока = НовыйОписаниеКоординат().Найти(4, "Смещение");
		
		Для Счетчик = НачалоШкалы * НайденнаяСтрока.Смещение По Мин(НайденнаяСтрока.Смещение * ЧасовВСутках, НайденнаяСтрока.Смещение * КонецШкалы) Цикл 
			
			ОбластьТаймСлота = Макет.ПолучитьОбласть("ТаймСлот");
			ОбластьТаймСлота.Параметры.ТаймСлот = Формат(Дата('19000101000000' + ((Счетчик * НайденнаяСтрока.Минуты * 60))),"ДФ=HH:мм");
			ТабличныйДокумент.Присоединить(ОбластьТаймСлота);
			
		КонецЦикла; 
		
	Иначе		
		ВызватьИсключение нСтр("ru = 'Ой, что то пошло не так, не указан шаг'") ;
	КонецЕсли; 
	
	ОписаниеСлота = ПреобразоватьКоординатыВДанныеСлота(ОписаниеСлота);

	
	добавленнаяОбласть = ТабличныйДокумент.Область(ОписаниеСлота.НомерПервойСтроки,
							ОписаниеСлота.НомерПервойКолонки,
							ОписаниеСлота.НомерПоследнейСтроки,	
							ОписаниеСлота.НомерПоследнейКолонки);
	добавленнаяОбласть.ЦветФона = WebЦвета.Бирюзовый; 
	добавленнаяОбласть.Объединить();
	
КонецПроцедуры

&НаСервере
Функция НовыйОписаниеТаблицыКоординат(Знач Дискретность)
	
	ЦелоеЧисло 		= ОбщегоНазначения.ОписаниеТипаЧисло(15,0,ДопустимыйЗнак.Неотрицательный);
	Строка150 		= ОбщегоНазначения.ОписаниеТипаСтрока(150);
	ДискретностьТип	= Новый ОписаниеТипов("ПеречислениеСсылка.слм_ДискретностьШкалы");
	
	ОписаниеТаблицыКоординат = Новый ТаблицаЗначений;
	
	ОписаниеТаблицыКоординат.Колонки.Добавить("Дискретность",			ДискретностьТип);
	ОписаниеТаблицыКоординат.Колонки.Добавить("Коэффициент", 			ЦелоеЧисло, НСтр("ru = 'Коэффициент пересчета в _15'"));
	ОписаниеТаблицыКоординат.Колонки.Добавить("ОбратныйКоеффициент",	ЦелоеЧисло, НСтр("ru = 'Обратный коеф. пересчета из _15'"));
	ОписаниеТаблицыКоординат.Колонки.Добавить("Минут", 					ЦелоеЧисло, НСтр("ru = 'Число минут в слоте'") );
	ОписаниеТаблицыКоординат.Колонки.Добавить("Секунд_15",ЦелоеЧисло,	НСтр("ru = 'Секунды, для вычисления номера первой строки'")); 
	ОписаниеТаблицыКоординат.Колонки.Добавить("РазмерСлотаСекунд", 		ЦелоеЧисло, НСтр("ru = 'Число секунд в слоте'"));
	ОписаниеТаблицыКоординат.Колонки.Добавить("Описание", 				Строка150, 	НСтр("ru = 'Описание'"));
	
	Описание = ОписаниеТаблицыКоординат.Добавить();
	Описание.Дискретность 				= Перечисления.слм_ДискретностьШкалы._60;
	Описание.РазмерСлотаСекунд 			= 3600;
	Описание.Коэффициент 				= 4;
	Описание.ОбратныйКоеффициент 		= 1;	
	Описание.Минут 						= 60;
	Описание.Секунд_15					= 900;
	Описание.Описание					= НСтр("ru = '0.125k'"); 
	
	Описание = ОписаниеТаблицыКоординат.Добавить();
	Описание.Дискретность 				= Перечисления.слм_ДискретностьШкалы._30;
	Описание.РазмерСлотаСекунд 			= 1800;
	Описание.ОбратныйКоеффициент 		= 2;
	Описание.Коэффициент 				= 2; 
	Описание.Минут 						= 30;
	Описание.Секунд_15					= 900;
	Описание.Описание					= НСтр("ru = '0.5k'");
	
	Описание = ОписаниеТаблицыКоординат.Добавить();
	Описание.Дискретность 				= Перечисления.слм_ДискретностьШкалы._15;
	Описание.РазмерСлотаСекунд 			= 900;
	Описание.ОбратныйКоеффициент 		= 4;
	Описание.Коэффициент 				= 1;
	Описание.Минут	 					= 15; 
	Описание.Секунд_15					= 900;
	Описание.Описание					= НСтр("ru = '1k'");	
	
	НайденноеОписание = ОписаниеТаблицыКоординат.Найти(Дискретность,"Дискретность");
	
	Если НайденноеОписание = Неопределено Тогда
		ВызватьИсключение нСтр("ru = 'Ой, что - то пошло не так, проверьте значение дискретности'"); 
	КонецЕсли; 
	
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(НайденноеОписание);	
	
КонецФункции

Функция НовыйОписаниеКоординат()
	
	//TODO: эта таблица дублирует НовыйОписаниеТаблицыКоординат, переделать вызов на ОбратныйКоеффициент
	ЦелоеЧисло 	= ОбщегоНазначения.ОписаниеТипаЧисло(2,0,ДопустимыйЗнак.Неотрицательный);
	Строка150 	= ОбщегоНазначения.ОписаниеТипаСтрока(150);
	ОписаниеКоординат = Новый ТаблицаЗначений;
	ОписаниеКоординат.Колонки.Добавить("Смещение", 	ЦелоеЧисло);
	ОписаниеКоординат.Колонки.Добавить("Минуты", 	ЦелоеЧисло);
	ОписаниеКоординат.Колонки.Добавить("Описание",  Строка150);
	
	НоваяЗапись = ОписаниеКоординат.Добавить();
	НоваяЗапись.Смещение 	= 1;
	НоваяЗапись.Минуты 		= 60;
	НоваяЗапись.Описание	= нСтр("ru = '1 /60 минут в интервале'"); 
	
	НоваяЗапись = ОписаниеКоординат.Добавить();
	НоваяЗапись.Смещение 	= 2;  
	НоваяЗапись.Минуты 		= 30;
	НоваяЗапись.Описание	= нСтр("ru = '30 минут/30 минут в интервале'");
	
	НоваяЗапись = ОписаниеКоординат.Добавить();
	НоваяЗапись.Смещение 	= 4;
	НоваяЗапись.Минуты 		= 15; 
	НоваяЗапись.Описание	= нСтр("ru = '15 минут/ 15 минут в интервале'");	
	
	Возврат ОписаниеКоординат;
	
КонецФункции


// Функция - Преобразовать координаты в данные слота
//
// Параметры:
//  ОписаниеКоординат	 - Структура - где:
// *ВремяНачала
// *ДеньНачала
// *ДеньОкончания
// 
// Возвращаемое значение:
//   - 
//
Функция ПреобразоватьКоординатыВДанныеСлота(Знач ОписаниеКоординат) Экспорт
	
	ВысотаШапки		= 1;	
	МинимальныйСлотВСекундах = 900; //размер _15 - минутной сетки
	
	ОбщееСмещенииВниз = 0; // нужно рассчитать
	ОписаниеСлота 	= Новый Структура; 
	
	ОписаниеСлота.Вставить("НомерПервойСтроки",		(ОписаниеКоординат.ВремяНачала 	  - Дата('00010101000000'))/ОписаниеКоординат.ОписаниеКоодинат.РазмерСлотаСекунд + ВысотаШапки + 1);
	ОписаниеСлота.Вставить("НомерПоследнейСтроки",	(ОписаниеКоординат.ВремяОкончания - Дата('00010101000000'))/ОписаниеКоординат.ОписаниеКоодинат.РазмерСлотаСекунд + ВысотаШапки); // преобразовать в _15 шкалу
	
	ОписаниеСлота.Вставить("НомерПервойКолонки",	ПолучитьНомерКолонкиПоДнюНедели(ОписаниеКоординат.ДеньНачала));
	ОписаниеСлота.Вставить("НомерПоследнейКолонки",	ПолучитьНомерКолонкиПоДнюНедели(ОписаниеКоординат.ДеньОкончания));
	
	ОписаниеСлота.Вставить("ДеньНачала",			ОписаниеКоординат.ДеньНачала);
	ОписаниеСлота.Вставить("ДеньОкончания",			ОписаниеКоординат.ДеньОкончания);
	
	Возврат Новый ФиксированнаяСтруктура(ОписаниеСлота);
	
КонецФункции

Функция ПолучитьНомерКолонкиПоДнюНедели(Знач ДеньНедели, Смещение = 1)
	
	НомераКолонок = Новый Соответствие;
	
	НомераКолонок.Вставить(Справочники.слм_ДниНедели.Понедельник, 	Смещение + 1);
	НомераКолонок.Вставить(Справочники.слм_ДниНедели.Вторник, 		Смещение + 2);
	НомераКолонок.Вставить(Справочники.слм_ДниНедели.Среда, 		Смещение + 3);
	НомераКолонок.Вставить(Справочники.слм_ДниНедели.Четверг, 		Смещение + 4);
	НомераКолонок.Вставить(Справочники.слм_ДниНедели.Пятница, 		Смещение + 5);
	НомераКолонок.Вставить(Справочники.слм_ДниНедели.Суббота, 		Смещение + 6);
	НомераКолонок.Вставить(Справочники.слм_ДниНедели.Воскресенье, 	Смещение + 7);
	
	Возврат НомераКолонок.Получить(ДеньНедели);
	
КонецФункции //ПолучитьНомерКолонкиПоДнюНедели

&НаКлиенте
Процедура Сгенерировать(Команда)
	СгенерироватьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СгенерироватьНаСервере()
	
	НовыйТаймСлот = Документы.слм_ТаймСлот.СоздатьДокумент();
	НовыйТаймСлот.Сетка 			= Объект.Сетка;
	НовыйТаймСлот.Дата = ТекущаяДатаСеанса();
	НовыйТаймСлот.ВремяНачала 		= ВремяНачала;
	НовыйТаймСлот.ВремяОкончания 	= ВремяОкончания;
	НовыйТаймСлот.ДеньНачала 		= ДеньНачала;
	НовыйТаймСлот.ДеньОкончания 	= ДеньОкончания;	
	
	НовыйТаймСлот.Записать();
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ""+НовыйТаймСлот.Ссылка;
	Сообщение.Сообщить(); 
	
КонецПроцедуры
