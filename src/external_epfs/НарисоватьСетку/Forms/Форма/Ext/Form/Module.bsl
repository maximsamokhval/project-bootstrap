
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дискретность = Перечисления.слм_ДискретностьШкалы._30;
	
	ТелеСмещение = 5;
	
	ИнициализироватьТабличныйДокумент();
	
	
КонецПроцедуры

&НаКлиенте
Процедура Нарисовать(Команда)
	
	ИнициализироватьТабличныйДокумент();
	
	ВставитьСлоты();	
	
КонецПроцедуры


Процедура ВставитьСлоты()
	
	РисунокТД = ТабличныйДокумент.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	РисунокТД.Картинка = БиблиотекаКартинок.Успешно;
	РисунокТД.РазмерКартинки=РазмерКартинки.АвтоРазмер;	
	
	Второй = ТабличныйДокумент.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	Второй.Картинка = БиблиотекаКартинок.Удалить;
	
	Слот1 = ТабличныйДокумент.Область(
		3,
		3,
		3,
		5);

	Слот1.Объединить();
	Слот1.ЦветФона = WebЦвета.Зеленый;
	слот1.Картинка = РисунокТД.Картинка;
	слот1.РазмерКартинки=РазмерКартинки.РеальныйРазмер;
	Слот1.Текст = НСтр("ru = 'Слот1'"); 
	
	Слот2 = ТабличныйДокумент.Область(
		5,
		3,
		3,
		3);
	Слот2.Объединить();
	Слот2.ЦветФона = WebЦвета.Синий;
	Слот2.Текст = НСтр("ru = 'Слот2'"); 	
	
	Если Пересекаются(Слот1, Слот2, Ложь) Тогда
		
		//_ЛЕВО = max(Слот1.Лево, Слот2.Лево);
		//_ВЕРХ = max(Слот1.ВЕРХ, Слот2.ВЕРХ);
		//_ПРАВО = Мин(Слот1.Право, Слот2.Право);
		//_НИЗ = Мин(Слот1.Низ, Слот1.Низ);
		//
		//_Ширина = _ПРАВО - _ЛЕВО;
		//_Высота = _НИЗ - _ВЕРХ;
		//
		//ОбластьПересечения = ТабличныйДокумент.Область(
		//	_ВЕРХ,
		//	_ЛЕВО,
		//	_НИЗ,
		//	_ПРАВО);
		//	
		////ОбластьПересечения.ЦветФона = WebЦвета.Оранжевый;
		//ОбластьПересечения.Объединить();
		//НЛ= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Двойная,1);
		//ОбластьПересечения.Обвести( НЛ,НЛ,НЛ,НЛ);
		
	КонецЕсли; 
	
	
	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция Пересекаются(Знач Слот1, Знач Слот2, ПоКолонкам = Истина)
	
	Если ПоКолонкам Тогда
		
		Если (Слот1.НомерПервойКолонки > Слот2.НомерПоследнейКолонки
			Или Слот1.НомерПоследнейКолонки < Слот2.НомерПервойКолонки
			Или Слот2.НомерПоследнейСтроки < Слот1.НомерПервойСтроки
			Или Слот2.НомерПервойСтроки > Слот1.НомерПоследнейСтроки) Тогда
			
			Возврат Ложь;
			
		КонецЕсли; 
		
		Возврат Истина;
		
	Иначе
		
		Если Слот1.Лево > Слот2.Право
				Или Слот1.Право < Слот2.Лево
				Или Слот2.Низ < Слот1.Верх
				Или Слот2.Верх > Слот1.Низ Тогда
				
			Возврат Ложь;
			
		КонецЕсли;		
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьТабличныйДокумент()
	
	ТабличныйДокумент.Очистить();
	
	Макет = документы.слм_ТелевизионнаяСетка.ПолучитьМакет("ШкалаСетки");
	
	Для каждого ДеньНедели Из Перечисления.слм_ДниНедели Цикл		
		ОбластьМакета = Макет.ПолучитьОбласть(ДеньНедели);
		ТабличныйДокумент.Присоединить(ОбластьМакета);		
	КонецЦикла;
	
	НайденнаяСтрока = НовыйОписаниеТаблицыКоординат(Дискретность);
	
	ЧасовВСутках = 23;
	НачалоШкалы = ТелеСмещение;
	КонецШкалы = 23+ ТелеСмещение;
	
	Для Счетчик = НачалоШкалы*НайденнаяСтрока.ОбратныйКоеффициент По Макс(НайденнаяСтрока.ОбратныйКоеффициент*ЧасовВСутках, НайденнаяСтрока.ОбратныйКоеффициент * КонецШкалы) Цикл 
		
		ПрисоединитьОбластьТаймСлота(Макет, НайденнаяСтрока, Счетчик); 
		
	КонецЦикла;	
	
	ТабличныйДокумент.ФиксацияСверху 	= 1;
	ТабличныйДокумент.ФиксацияСлева 	= 1;
	
КонецПроцедуры


&НаСервере
Процедура ПрисоединитьОбластьТаймСлота(Знач Макет, Знач НайденнаяСтрока, Знач Счетчик)
	
	Перем ОбластьТаймСлота;
	
	ОбластьТаймСлота = Макет.ПолучитьОбласть("ТаймСлот");
	ОбластьТаймСлота.Параметры.ТаймСлот = Формат(Дата('00010101000000' + ((Счетчик*НайденнаяСтрока.Минут * 60))),"ДФ=HH:мм");
	ТабличныйДокумент.Присоединить(ОбластьТаймСлота);

КонецПроцедуры

// Функция - Описание координаты
//
// Параметры:
//  Дискретность - ПеречислениеСсылка.слм_ДискретностьШкалы	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаСервере
Функция НовыйОписаниеТаблицыКоординат(Знач Дискретность) 	
	Возврат Документы.слм_ТелевизионнаяСетка.НовыйОписаниеТаблицыКоординат(Дискретность);	
КонецФункции

&НаКлиенте
Процедура Добавить(Команда)
	
	ОчиститьСообщения();
	ТекущаяОбласть = Элементы.ТабличныйДокумент.ТекущаяОбласть;
	
	ВыделитьОбласть(ТекущаяОбласть);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьОбласть(ТекущаяОбласть)	
	
	ЛинияОбведения 		= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
	ТекущаяОбласть.Имя = СтрШаблон("%1_%2","new_",Строка(Новый УникальныйИдентификатор));	
	ТекущаяОбласть.Обвести(ЛинияОбведения, ЛинияОбведения, ЛинияОбведения, ЛинияОбведения);		
	ТекущаяОбласть.Объединить();
	
	ТекущаяОбласть.СодержитЗначение = Истина;
	ТекущаяОбласть.ТипЗначения 		= Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150,ДопустимаяДлина.Переменная));
	
	ОписаниеСлота = Новый Структура;
	ОписаниеСлота.Вставить("Имя",ТекущаяОбласть.Имя);
	
	Для каждого КлючИЗначение Из СоответствиеПолейОбластиСлоту() Цикл
		ОписаниеСлота.Вставить(КлючИЗначение.Значение, ТекущаяОбласть[КлючИЗначение.Ключ]); 
	КонецЦикла;	
	
	ОписаниеТаблицыКоординат = НовыйОписаниеТаблицыКоординат(Дискретность);
	СмещениеСверхуВСекундах = ТелеСмещение*3600;
	ДлительностьСлота 		= (ОписаниеСлота.НомерПоследнейСтроки-ОписаниеСлота.НомерПервойСтроки + ТабличныйДокумент.ФиксацияСверху) * ОписаниеТаблицыКоординат.РазмерСлотаСекунд;
	
	ОписаниеСлота.Вставить("ВремяНачала", 	Дата('00010101000000' + (ОписаниеСлота.НомерПервойСтроки - ТабличныйДокумент.ФиксацияСверху - 1) * ОписаниеТаблицыКоординат.Минут * 60 + СмещениеСверхуВСекундах));
	ОписаниеСлота.Вставить("ВремяОкончания",ОписаниеСлота.ВремяНачала + ДлительностьСлота);
	ОписаниеСлота.Вставить("ДеньНачала",	ПолучитьДеньНеделиПоНомеру(ОписаниеСлота.НомерПервойКолонки));
	ОписаниеСлота.Вставить("ДеньОкончания",	ПолучитьДеньНеделиПоНомеру(ОписаниеСлота.НомерПоследнейКолонки));	
	
	//ВНастройки(ОписаниеСлота);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзНастроек()

	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		_КлючОбъекта(),
		_КлючНастроек());
	
КонецФункции

&НаСервереБезКонтекста
Процедура ВНастройки(Знач СохраняемоеЗначение)

	СтруктураХранения = Новый Структура;
	СтруктураХранения.Вставить(СохраняемоеЗначение.Имя,СохраняемоеЗначение); 
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		_КлючОбъекта(),
		_КлючНастроек(),
		СтруктураХранения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция _КлючОбъекта()
	Возврат Метаданные.Документы.слм_ТелевизионнаяСетка.ПолноеИмя();
КонецФункции

&НаСервереБезКонтекста
Функция _КлючНастроек()
	
	Возврат Метаданные.Документы.слм_ТелевизионнаяСетка.Имя;
	
КонецФункции


// Возвращает соответствие, в котором ключ - имя области ячеек табличного документа, а значение - имя реквизита слота.
&НаКлиентеНаСервереБезКонтекста
Функция СоответствиеПолейОбластиСлоту()
	
	СоответствиеПолей = Новый Соответствие;
	СоответствиеПолей.Вставить("Верх", 	"НомерПервойСтроки");
	СоответствиеПолей.Вставить("Низ", 	"НомерПоследнейСтроки");
	СоответствиеПолей.Вставить("Лево", 	"НомерПервойКолонки");
	СоответствиеПолей.Вставить("Право", "НомерПоследнейКолонки");
	
	Возврат Новый ФиксированноеСоответствие(СоответствиеПолей);
	
КонецФункции //СоответствиеПолейОбластиСлоту


&НаСервереБезКонтекста
Функция ПолучитьДеньНеделиПоНомеру(Знач Номер = 2, Смещение = 1)
	
	Возврат Документы.слм_ТаймСлот.ПолучитьДеньНеделиПоНомеру(Номер, Смещение);
	
КонецФункции
